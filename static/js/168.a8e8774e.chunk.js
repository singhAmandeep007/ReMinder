"use strict";(self.webpackChunktodo_app=self.webpackChunktodo_app||[]).push([[168,976,513,245],{9168:(e,r,t)=>{t.r(r),t.d(r,{createRoutes:()=>d});var o=t(1976),n=t(1513);function d(){o.reminderRoutes.call(this),n.reminderGroupRoutes.call(this)}},1976:(e,r,t)=>{t.r(r),t.d(r,{reminderRoutes:()=>n});var o=t(5245);function n(){this.get((0,o.urlPrefix)("/reminders"),((e,r)=>{let t;const n=r.queryParams;if(n){if(n.groupId){if(null===e.find("reminderGroup",n.groupId))return(0,o.resourceNotFoundResponse)("Reminder group "+n.groupId)}t=e.where("reminder",n)}else t=e.all("reminder");return{data:t.models.map((e=>e.getAttributes()))}})),this.delete((0,o.urlPrefix)("/reminders/:id"),((e,r)=>{const t=r.params.id,n=e.find("reminder",t);return null===n||void 0===n||n.destroy(),null===n?(0,o.resourceNotFoundResponse)("Reminder "+t):{message:"Reminder with id ".concat(t," deleted!")}})),this.post((0,o.urlPrefix)("/reminders"),((e,r)=>{const t=JSON.parse(r.requestBody);return{data:e.create("reminder",t).attrs}}))}},1513:(e,r,t)=>{t.r(r),t.d(r,{reminderGroupRoutes:()=>n});var o=t(5245);function n(){this.get((0,o.urlPrefix)("/reminder-groups"),(e=>({data:e.all("reminderGroup").models}))),this.get((0,o.urlPrefix)("/reminder-groups/:id"),((e,r)=>{const t=r.params.id,n=e.find("reminderGroup",t);return null===n?(0,o.resourceNotFoundResponse)("Reminder group "+t):{data:n}})),this.delete((0,o.urlPrefix)("/reminder-groups/:id"),((e,r)=>{const t=r.params.id,n=e.find("reminderGroup",t);if(null===n)return(0,o.resourceNotFoundResponse)("Reminder group "+t);const d=e.all("reminder").filter((e=>e.groupId===t));return null===d||void 0===d||d.destroy(),null===n||void 0===n||n.destroy(),{message:"Reminder group with id ".concat(t," deleted!")}})),this.patch((0,o.urlPrefix)("/reminder-groups/:id"),((e,r)=>{const t=r.params.id,n=JSON.parse(r.requestBody),d=e.find("reminderGroup",t);return null===d?(0,o.resourceNotFoundResponse)("Reminder group "+t):(d.update(n),{data:d})})),this.post((0,o.urlPrefix)("/reminder-groups"),((e,r)=>{const t=JSON.parse(r.requestBody);return{data:e.create("reminderGroup",t)}}))}},5245:(e,r,t)=>{t.r(r),t.d(r,{resourceNotFoundResponse:()=>s,urlPrefix:()=>d});var o=t(1266);const n="https://todo-app.com/api/v1/",d=e=>{if("/"!==e[0])throw new Error("Miragejs handler path should start with a forward slash.");return"/"===n[27]?"".concat(n).concat(e.slice(1)):"".concat(n).concat(e)},s=e=>new o.YK(404,{},{message:"Resource ".concat(e," not found!")})}}]);
//# sourceMappingURL=168.a8e8774e.chunk.js.map