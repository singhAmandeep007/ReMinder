"use strict";(self.webpackChunktodo_app=self.webpackChunktodo_app||[]).push([[976,245],{1976:(e,r,t)=>{t.r(r),t.d(r,{reminderRoutes:()=>s});var n=t(5245);function s(){this.get((0,n.urlPrefix)("/reminders"),((e,r)=>{let t;const s=r.queryParams;if(s){if(s.groupId){if(null===e.find("reminderGroup",s.groupId))return(0,n.resourceNotFoundResponse)("Reminder group "+s.groupId)}t=e.where("reminder",s)}else t=e.all("reminder");return{data:t.models.map((e=>e.getAttributes()))}})),this.delete((0,n.urlPrefix)("/reminders/:id"),((e,r)=>{const t=r.params.id,s=e.find("reminder",t);return null===s||void 0===s||s.destroy(),null===s?(0,n.resourceNotFoundResponse)("Reminder "+t):{message:"Reminder with id ".concat(t," deleted!")}})),this.post((0,n.urlPrefix)("/reminders"),((e,r)=>{const t=JSON.parse(r.requestBody),n={isPinned:!1,state:"ACTIVE",createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()};return{data:e.create("reminder",Object.assign(n,t)).attrs}})),this.patch((0,n.urlPrefix)("/reminders/:id"),((e,r)=>{const t=r.params.id,s=JSON.parse(r.requestBody),o=e.find("reminder",t);return null===o?(0,n.resourceNotFoundResponse)("Reminder "+t):(o.update(s),{data:o})}))}},5245:(e,r,t)=>{t.r(r),t.d(r,{resourceNotFoundResponse:()=>d,urlPrefix:()=>o});var n=t(1266);const s="https://todo-app.com/api/v1/",o=e=>{if("/"!==e[0])throw new Error("Miragejs handler path should start with a forward slash.");return"/"===s[27]?"".concat(s).concat(e.slice(1)):"".concat(s).concat(e)},d=e=>new n.YK(404,{},{message:"Resource ".concat(e," not found!")})}}]);
//# sourceMappingURL=976.764f8538.chunk.js.map