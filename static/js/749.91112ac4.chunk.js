"use strict";(self.webpackChunktodo_app=self.webpackChunktodo_app||[]).push([[749],{4749:(t,r,e)=>{e.r(r),e.d(r,{IdentityManager:()=>u});const o={randomUUID:"undefined"!==typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let n;const s=new Uint8Array(16);function d(){if(!n&&(n="undefined"!==typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!n))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(s)}const i=[];for(let p=0;p<256;++p)i.push((p+256).toString(16).slice(1));function a(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return i[t[r+0]]+i[t[r+1]]+i[t[r+2]]+i[t[r+3]]+"-"+i[t[r+4]]+i[t[r+5]]+"-"+i[t[r+6]]+i[t[r+7]]+"-"+i[t[r+8]]+i[t[r+9]]+"-"+i[t[r+10]]+i[t[r+11]]+i[t[r+12]]+i[t[r+13]]+i[t[r+14]]+i[t[r+15]]}const c=function(t,r,e){if(o.randomUUID&&!r&&!t)return o.randomUUID();const n=(t=t||{}).random||(t.rng||d)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,r){e=e||0;for(let t=0;t<16;++t)r[e+t]=n[t];return r}return a(n)};class u{constructor(){this.ids=void 0,this.ids=new Set}fetch(){let t=c();for(;this.ids.has(t);)t=c();return this.ids.add(t),t}set(t){if(this.ids.has(t))throw new Error("ID ".concat(t," has already been used."));this.ids.add(t)}reset(){this.ids.clear()}}}}]);
//# sourceMappingURL=749.91112ac4.chunk.js.map