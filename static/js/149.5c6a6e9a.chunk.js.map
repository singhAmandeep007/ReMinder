{"version":3,"file":"static/js/149.5c6a6e9a.chunk.js","mappings":"2GAIO,SAASA,EAAeC,GAC7B,MAAMC,EAAU,CAEdC,cAAe,WAAqB,IAApBC,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAE1B,OADAJ,EAAOO,WAAW,WAAYJ,GACvBF,CACT,EAEAO,mBAAoBC,IAMb,IANc,eACnBC,EAAiB,CAAC,OAAQ,OAAQ,YAAW,kBAC7CC,EAAoB,IAIrBF,EAMC,OALAC,EAAeE,SAASC,IACtB,MAAMC,EAAQd,EAAOe,OAAO,gBAAiB,CAAEC,KAAMH,IACrDb,EAAOO,WAAW,WAAYI,EAAmB,CAAEG,SAAQ,IAGtDb,CAAO,GAGlB,OAAOA,CACT,C","sources":["services/mocker/mirage/scenarios/index.ts"],"sourcesContent":["import { TNonEmptyArray } from \"types\";\n\nimport { TAppMockServer } from \"../types\";\n\nexport function buildScenarios(server: TAppMockServer) {\n  const builder = {\n    // create reminders without any group\n    withReminders: (n: number = 10) => {\n      server.createList(\"reminder\", n);\n      return builder;\n    },\n    // create reminders with groups\n    withReminderGroups: ({\n      reminderGroups = [\"Work\", \"Home\", \"Personal\"],\n      remindersPerGroup = 10,\n    }: {\n      reminderGroups?: TNonEmptyArray<string>;\n      remindersPerGroup?: number;\n    }) => {\n      reminderGroups.forEach((groupName) => {\n        const group = server.create(\"reminderGroup\", { name: groupName });\n        server.createList(\"reminder\", remindersPerGroup, { group });\n      });\n\n      return builder;\n    },\n  };\n  return builder;\n}\n"],"names":["buildScenarios","server","builder","withReminders","n","arguments","length","undefined","createList","withReminderGroups","_ref","reminderGroups","remindersPerGroup","forEach","groupName","group","create","name"],"sourceRoot":""}