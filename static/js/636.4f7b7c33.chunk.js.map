{"version":3,"file":"static/js/636.4f7b7c33.chunk.js","mappings":"kKAQO,MAAMA,EAAsDC,EAAAA,GAAQC,OAAkB,CAC3FC,GAAGC,GACK,eAANC,OAAsBD,GAExBE,MAAMF,GACE,YAANC,OAAmBD,GAErBG,SAASH,GACHA,EAAI,IAAM,EAKhBI,MAAOC,EAAAA,EAAeC,OACtBC,UAASA,KACA,IAAIC,MAAOC,cAEpBC,UAASA,KACA,IAAIF,MAAOC,e,kCC1Bf,MAAMJ,EAAiB,CAC5BC,OAAQ,SACRK,UAAW,Y","sources":["services/mocker/mirage/factories/reminder.ts","types/Reminders.ts"],"sourcesContent":["import { Factory } from \"miragejs\";\n// eslint-disable-next-line import/no-unresolved\nimport { FactoryDefinition } from \"miragejs/-types\";\n\nimport { TReminder, REMINDER_STATE } from \"types\";\n\nimport { TAppModels } from \"../types\";\n\nexport const reminder: FactoryDefinition<TAppModels[\"reminder\"]> = Factory.extend<TReminder>({\n  id(n) {\n    return `reminder-id-${n}`;\n  },\n  title(n) {\n    return `Reminder ${n}`;\n  },\n  isPinned(n) {\n    if (n % 2 === 0) {\n      return true;\n    }\n    return false;\n  },\n  state: REMINDER_STATE.ACTIVE,\n  createdAt() {\n    return new Date().toISOString();\n  },\n  updatedAt() {\n    return new Date().toISOString();\n  },\n});\n","export const REMINDER_STATE = {\n  ACTIVE: \"ACTIVE\",\n  COMPLETED: \"COMPLETED\",\n} as const;\n\nexport type TReminderState = (typeof REMINDER_STATE)[keyof typeof REMINDER_STATE];\n\nexport type TReminder = {\n  id: string;\n  title: string;\n  state: TReminderState;\n  isPinned: boolean;\n  createdAt: string;\n  updatedAt: string;\n  group?: TReminderGroup;\n};\n\nexport type TReminderGroup = {\n  id: string;\n  name: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type TMessageResponsePaylaod = {\n  message: string;\n};\n\nexport type TDataResponsePayload<T> = {\n  data: T;\n};\n\n/**\n * Error\n */\nexport type THTTPError = {\n  message: string;\n};\n\n/**\n * Reminder\n */\nexport type TGetRemindersQueryParams = Partial<{\n  groupId: TReminderGroup[\"id\"];\n  state: TReminder[\"state\"];\n}>;\n\nexport type TGetRemindersResponsePayload = TDataResponsePayload<TReminder[]>;\n\nexport type TGetReminderRequestPayload = TReminder[\"id\"];\n\nexport type TGetReminderResponsePayload = TDataResponsePayload<TReminder>;\n\nexport type TCreateReminderRequestPayload = Pick<TReminder, \"title\"> & Partial<{ groupId: TReminderGroup[\"id\"] }>;\n\nexport type TCreateReminderResponsePayload = TDataResponsePayload<TReminder>;\n\nexport type TUpdateReminderRequestPayload = Pick<TReminder, \"id\"> &\n  Partial<Pick<TReminder, \"title\" | \"state\" | \"isPinned\"> & { groupId: TReminderGroup[\"id\"] }>;\n\nexport type TUpdateReminderResponsePayload = TDataResponsePayload<TReminder>;\n\nexport type TDeleteReminderRequestPayload = TReminder[\"id\"];\n\nexport type TDeleteReminderResponsePayload = TMessageResponsePaylaod;\n\n/**\n * Reminder Group\n */\nexport type TGetReminderGroupsResponsePayload = TDataResponsePayload<TReminderGroup[]>;\n\nexport type TGetReminderGroupRequestPayload = TReminderGroup[\"id\"];\n\nexport type TGetReminderGroupResponsePayload = TDataResponsePayload<TReminderGroup>;\n\nexport type TCreateReminderGroupRequestPayload = Pick<TReminderGroup, \"name\">;\n\nexport type TCreateReminderGroupResponsePayload = TDataResponsePayload<TReminderGroup>;\n\nexport type TUpdateReminderGroupRequestPayload = Pick<TReminderGroup, \"id\"> & Partial<Pick<TReminderGroup, \"name\">>;\n\nexport type TUpdateReminderGroupResponsePayload = TDataResponsePayload<TReminderGroup>;\n\nexport type TDeleteReminderGroupRequestPayload = TReminderGroup[\"id\"];\n\nexport type TDeleteReminderGroupResponsePayload = TMessageResponsePaylaod;\n"],"names":["reminder","Factory","extend","id","n","concat","title","isPinned","state","REMINDER_STATE","ACTIVE","createdAt","Date","toISOString","updatedAt","COMPLETED"],"sourceRoot":""}