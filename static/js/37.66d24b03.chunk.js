"use strict";(self.webpackChunkreminder_app=self.webpackChunkreminder_app||[]).push([[37],{4037:(e,r,t)=>{t.d(r,{runServer:()=>h});var n=t(3806),s=t(3527),i=t(4349),d=t(9700);const a=(0,s.factory)({reminder:{id:(0,s.primaryKey)(i.uR),title:()=>"Reminder ".concat((0,i.uR)({simple:!0})),isPinned:()=>!1,state:()=>d.x.INACTIVE,group:(0,s.oneOf)("reminderGroup"),createdAt:()=>(new Date).toISOString(),updatedAt:()=>(new Date).toISOString(),dueDate:(0,s.nullable)(String)},reminderGroup:{id:(0,s.primaryKey)(i.uR),name:()=>"Reminder Group ".concat((0,i.uR)({simple:!0})),createdAt:()=>(new Date).toISOString(),updatedAt:()=>(new Date).toISOString()}});var o=t(8814),u=t(153);const c=(e,r)=>{const t=r||"https://reminder-app.com/api/v1/";if("/"!==e[0])throw new Error("MSW handler path should start with a forward slash.");return"/"===t[t.length-1]?"".concat(t).concat(e.slice(1)):"".concat(t).concat(e)},m=e=>[o.L.get(c("/reminders"),(r=>{let{request:t}=r;const n=e.reminder.getAll(),s=(0,i.wm)(t.url);let d=n;return s.groupId&&(d=d.filter((e=>{var r;return(null===e||void 0===e||null===(r=e.group)||void 0===r?void 0:r.id)===s.groupId}))),s.state&&(d=d.filter((e=>e.state===s.state))),u.c.json({data:d},{status:200})})),o.L.post(c("/reminders"),(async r=>{let{request:t}=r;const{title:n,groupId:s}=await t.json(),i=e.reminderGroup.getAll().find((e=>e.id===s));if(s&&!i)return u.c.json({message:"Reminder Group with id ".concat(s," not found!")},{status:404});const d=e.reminder.create({title:n,group:i});return u.c.json({data:d},{status:201})})),o.L.delete(c("/reminders/:id"),(r=>{let{params:t}=r;return e.reminder.findFirst({where:{id:{equals:t.id}}})?(e.reminder.delete({where:{id:{equals:t.id}}}),u.c.json({message:"Reminder with id ".concat(t.id," deleted!")},{status:200})):u.c.json({message:"Reminder with id ".concat(t.id," not found!")},{status:404})})),o.L.patch(c("/reminders/:id"),(async r=>{let{request:t,params:n}=r;const{groupId:s,...i}=await t.json();if(!e.reminder.findFirst({where:{id:{equals:n.id}}}))return u.c.json({message:"Reminder with id ".concat(n.id," not found!")},{status:404});const d=e.reminderGroup.findFirst({where:{id:{equals:s}}});if(s&&!d)return u.c.json({message:"Reminder Group with id ".concat(s," not found!")},{status:404});const a=e.reminder.update({where:{id:{equals:n.id}},data:{...i}});return u.c.json({data:a},{status:200})}))],p=e=>[o.L.get(c("/reminder-groups"),(()=>u.c.json({data:e.reminderGroup.getAll()},{status:200}))),o.L.get(c("/reminder-groups/:id"),(r=>{let{params:t}=r;const n=e.reminderGroup.findFirst({where:{id:{equals:t.id}}});return n?u.c.json({data:n},{status:200}):u.c.json({message:"Reminder Group with id ".concat(t.id," not found!")},{status:404})})),o.L.post(c("/reminder-groups"),(async r=>{let{request:t}=r;const n=await t.json(),s=e.reminderGroup.create({...n});return u.c.json({data:s},{status:201})})),o.L.delete(c("/reminder-groups/:id"),(r=>{let{params:t}=r;return e.reminderGroup.findFirst({where:{id:{equals:t.id}}})?(e.reminderGroup.delete({where:{id:{equals:t.id}}}),u.c.json({message:"Reminder Group with id ".concat(t.id," deleted!")},{status:200})):u.c.json({message:"Reminder Group with id ".concat(t.id," not found!")},{status:404})})),o.L.patch(c("/reminder-groups/:id"),(async r=>{let{request:t,params:n}=r;const s=await t.json();if(!e.reminderGroup.findFirst({where:{id:{equals:n.id}}}))return u.c.json({message:"Reminder Group with id ".concat(n.id," not found!")},{status:404});const i=e.reminderGroup.update({where:{id:{equals:n.id}},data:{...s}});return u.c.json({data:i},{status:200})}))],l=(e=>[...p(e),...m(e)])(a),h=async e=>(null!==e&&void 0!==e&&e.withDefaultScenario&&w(a).withReminders(5).withReminderGroups({reminderGroups:["Work","Home","Personal"],remindersPerGroup:2}),await(async()=>{const e=(0,n.k)(...l);return await e.start({onUnhandledRequest:"bypass",serviceWorker:{url:"".concat("https://singhamandeep.me/reminder-app/","mockServiceWorker.js")}})})()),w=e=>{const r={withReminders:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10;for(let r=0;r<t;r++)e.reminder.create();return r},withReminderGroups:t=>{let{reminderGroups:n=["Work","Home","Personal"],remindersPerGroup:s=10}=t;return n.forEach((r=>{const t=e.reminderGroup.create({name:r});for(let n=0;n<s;n++)e.reminder.create({group:t})})),r}};return r}},9700:(e,r,t)=>{t.d(r,{x:()=>n});const n={INACTIVE:"INACTIVE",INPROGRESS:"INPROGRESS",COMPLETED:"COMPLETED",ARCHIVED:"ARCHIVED"}}}]);
//# sourceMappingURL=37.66d24b03.chunk.js.map